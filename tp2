#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct Date {
    char jour[3];
    char mois[3];
    char annee[5];
} date;

typedef struct Produit {
    char *Nom_produit;
    char Reference[100];
    float Montant;
    date DateAchat;
} produit;

typedef struct Liste {
    produit cellule;
    struct Liste *suiv;
} liste;

liste* creer_liste_produits() {
    liste *P = (liste*)malloc(sizeof(liste));
    P->suiv = NULL;
    return P;
}

int est_vide(liste *debut) {
    return debut != NULL;
}

liste* creer_produit() {
    liste *P = creer_liste_produits();
    char temp[21];
    int longueur;

    printf("Entrez le nom de produit:\n");
    fflush(stdin);
    fgets(temp, 21, stdin);
    longueur = strlen(temp);
    P->cellule.Nom_produit = (char*)malloc(longueur * sizeof(char));
    strcpy(P->cellule.Nom_produit, temp);

    printf("Entrez la reference:\n");
    fflush(stdin);
    fgets(P->cellule.Reference, 100, stdin);

    printf("Entrez le montant:\n");
    do {
        scanf("%f", &P->cellule.Montant);
        if (P->cellule.Montant < 0)
            printf("----Entrez un montant raisonnable:----\n");
    } while (P->cellule.Montant < 0);

    printf("Entrez la date : JJ MM AA :\n");
    printf("Jour : ");
    fflush(stdin);
    fgets(P->cellule.DateAchat.jour, 3, stdin);
    fflush(stdin);
    printf("Mois : ");
    fgets(P->cellule.DateAchat.mois, 3, stdin);
    fflush(stdin);
    printf("Annee: ");
    fgets(P->cellule.DateAchat.annee, 5, stdin);
    fflush(stdin);
    printf("\n\n");
    return P;
}

void afficher_produit(liste *produit) {
    if (!est_vide(produit)) {
        printf("\n\tListe vide\n\n");
        return;
    }

    printf("Entrez le nom de produit:\n");
    char *tab = (char*)malloc(21 * sizeof(char));
    fflush(stdin);
    fgets(tab, 21, stdin);

    while (produit != NULL && strcasecmp(produit->cellule.Nom_produit, tab) != 0) {
        produit = produit->suiv;
    }

    if (produit == NULL) {
        printf("\n\n\tProduit n'existe pas\n");
        return;
    }

    printf("-----Nom produit : %s-----\n", produit->cellule.Nom_produit);
    printf("1-Reference: %s\n", produit->cellule.Reference);
    printf("2-Montant : %f\n", produit->cellule.Montant);
    printf("3-Date d'achat :\n");
    printf(" %s/%s/%s", produit->cellule.DateAchat.jour, produit->cellule.DateAchat.mois, produit->cellule.DateAchat.annee);
    printf("\n\n");
}

liste* ajouter_debut(liste* debut) {
    if (!est_vide(debut))
        return creer_produit();

    liste *ptr = creer_produit();
    ptr->suiv = debut;
    return ptr;
}

liste* ajouter_fin(liste* debut) {
    if (!est_vide(debut))
        return ajouter_debut(debut);

    liste *Head = debut;
    while (debut->suiv != NULL) {
        debut = debut->suiv;
    }

    debut->suiv = creer_produit();
    return Head;
}

void afficher_produits(liste* debut) {
    if (!est_vide(debut)) {
        printf("\t\nListe vide\n\n");
        return;
    }

    while (debut != NULL) {
        printf("%s", debut->cellule.Nom_produit);
        printf(" -Reference: %s\n", debut->cellule.Reference);
        printf(" -Montant : %f\n", debut->cellule.Montant);
        printf(" -Date d'achat :\n");
        printf("  %s/%s/%s", debut->cellule.DateAchat.jour, debut->cellule.DateAchat.mois, debut->cellule.DateAchat.annee);
        printf("\n\n");
        debut = debut->suiv;
    }

    printf("\n\n");
}

int longueur(liste *debut) {
    int a;
    for (a = 0; debut != NULL; a++, debut = debut->suiv);
    return a;
}

void filtrer_date(liste *debut, date dt) {
    int a = 0;
    while (debut != NULL) {
        if (strcasecmp(dt.annee, debut->cellule.DateAchat.annee) == 0 &&
            strcasecmp(dt.mois, debut->cellule.DateAchat.mois) == 0 &&
            strcasecmp(dt.jour, debut->cellule.DateAchat.jour) == 0) {
            a++;
            printf("-----Nom produit : %s-----\n", debut->cellule.Nom_produit);
            printf("1-Reference: %s\n", debut->cellule.Reference);
            printf("2-Montant : %f\n", debut->cellule.Montant);
            printf("3-Date d'achat :\n");
            printf(" %s/%s/%s", debut->cellule.DateAchat.jour, debut->cellule.DateAchat.mois, debut->cellule.DateAchat.annee);
            printf("\n\n");
        }
        debut = debut->suiv;
    }
    if (!a)
        printf("Aucun produit avec cette date existe\n\n");
}

liste* supprimer_debut(liste *debut) {
    liste *temp = debut;
    debut = debut->suiv;
    free(temp);
    return debut;
}

void supprimer__fin(liste *debut) {
    liste *temp = debut;
    while (temp->suiv->suiv != NULL) {
        temp = temp->suiv;
    }
    free(temp->suiv);
    temp->suiv = NULL;
}

liste* rembourser(liste* Liste, char* refer) {
    if (!est_vide(Liste)) {
        printf("\n\tListe vide\n\n");
        return Liste;
    }

    liste *P = Liste, *prev;

    while (P != NULL && strcasecmp(refer, P->cellule.Reference) != 0) {
        prev = P;
        P = P->suiv;
    }

    if (P != NULL) {
        if (P == Liste)
            return supprimer_debut(Liste);
        else if (P->suiv == NULL)
            supprimer__fin(Liste);
        else {
            prev->suiv = P->suiv;
            free(P);
        }
    } else {
        printf("\t\nProduit n'existe pas\n");
    }
    return Liste;
}

date saisir_Date() {
    date dt;
    printf("Jour:\n");
    fflush(stdin);
    fgets(dt.jour, 3, stdin);
    fflush(stdin);
    printf("Mois:\n");
    fgets(dt.mois, 3, stdin);
    fflush(stdin);
    printf("Annee:\n");
    fgets(dt.annee, 5, stdin);
    fflush(stdin);
    return dt;
}

char* saisirRef() {
    char *ref = (char*)malloc(100 * sizeof(char));
    printf("Entrez la reference:\n");
    fflush(stdin);
    fgets(ref, 100, stdin);
    return ref;
}

int main() {
    liste *debut = NULL;
    int x;

    do {
        printf("0-Sortir\n");
        printf("1-Ajouter un produit\n");
        printf("2-Afficher un produit specifique\n");
        printf("3-Afficher tous les produits\n");
        printf("4-Afficher le nombre de produits\n");
        printf("5-Afficher les produits d'une date\n");
        printf("6-Supprimer un produit\n");
        scanf("%d", &x);

        if (x == 0) {
            free(debut);
            exit(0);
        } else if (x == 1) {
            debut = ajouter_fin(debut);
        } else if (x == 2) {
            afficher_produit(debut);
        } else if (x == 3) {
            afficher_produits(debut);
        } else if (x == 4) {
            printf("\t%d\n\n\n", longueur(debut));
        } else if (x == 5) {
            filtrer_date(debut, saisir_Date());
        } else if (x == 6) {
            debut = rembourser(debut, saisirRef());
        }

    } while (1);
}
